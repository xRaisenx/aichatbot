const { config } = require('dotenv');
const path = require('path');
const { Index } = require('@upstash/vector');
const { readFile } = require('fs/promises');

config({ path: path.resolve(__dirname, '.env') });

// Configuration
const configData = {
  true_gemini: true, // Use Gemini data if true
  training_batch_size: 32,
  training_epochs: 10,
};

// Debug environment variables
console.log('UPSTASH_VECTOR_REST_URL:', process.env.UPSTASH_VECTOR_REST_URL);
console.log('UPSTASH_VECTOR_REST_TOKEN:', process.env.UPSTASH_VECTOR_REST_TOKEN);

// Validate environment variables
if (!process.env.UPSTASH_VECTOR_REST_URL || !process.env.UPSTASH_VECTOR_REST_TOKEN) {
  throw new Error('UPSTASH_VECTOR environment variables must be set');
}

// Initialize vector index
const vectorIndex = new Index({
  url: process.env.UPSTASH_VECTOR_REST_URL,
  token: process.env.UPSTASH_VECTOR_REST_TOKEN,
});

async function seed() {
  console.log('Seeding vector index with sample queries and Gemini data');
  try {
    let productsToSeed = [
      {
        id: 'vegan_lipstick',
        data: 'vegan lipstick under $20',
        metadata: {
          intent: 'product_search',
          is_product_query: true,
          search_keywords: JSON.stringify(['vegan', 'lipstick', 'cheap']),
          product_types: JSON.stringify(['lipstick']),
          attributes: JSON.stringify(['vegan', 'cruelty-free']),
          vendor: null,
          price_filter_max_price: 20,
          price_filter_currency: 'USD',
          requested_product_count: 1,
          ai_understanding: 'product query for vegan lipstick with price filter',
          advice: 'Looking for vegan lipsticks under $20? Let’s find cruelty-free options!',
          sort_by_price: true,
          usage_instructions: 'Apply to lips.',
          is_combo_set_query: false,
          is_fictional_product_query: false,
          is_clarification_needed: false,
          is_ingredient_query: false,
          skin_concern: JSON.stringify([]),
          is_price_range_query: false,
          response_confidence: 0.9,
          suggested_follow_ups: JSON.stringify(['Any specific shades?', 'Want vegan mascaras?']),
          is_out_of_stock_query: false,
          query_language: 'en',
          is_comparison_query: false,
          cache_ttl_override: 3600,
          is_location_specific: false,
          user_intent_priority: 'product_search',
          alternative_product_types: JSON.stringify([]),
          is_feedback_request: false,
          contextual_clarification: '',
          is_subscription_query: false,
          is_personalized_query: false,
          product_application_time: JSON.stringify(['anytime']),
          is_promotion_query: false,
          user_sentiment: 'neutral',
          is_gift_query: JSON.stringify(false),
          product_packaging: JSON.stringify([]),
          is_educational_query: false,
          related_categories: JSON.stringify(['lip gloss', 'lip balm']),
          is_urgency_indicated: false,
          query_complexity: 3,
        },
      },
      {
        id: 'hydrating_serum',
        data: 'serum for dry skin',
        metadata: {
          intent: 'product_search',
          is_product_query: true,
          search_keywords: JSON.stringify(['serum', 'dry skin', 'hyaluronic acid']),
          product_types: JSON.stringify(['serum']),
          attributes: JSON.stringify(['vegan', 'hyaluronic acid']),
          vendor: null,
          price_filter_max_price: null,
          price_filter_currency: null,
          requested_product_count: 1,
          ai_understanding: 'product query for serum',
          advice: 'Try serums with hyaluronic acid for dry skin hydration.',
          sort_by_price: false,
          usage_instructions: 'Apply after cleansing, before moisturizer.',
          is_combo_set_query: false,
          is_fictional_product_query: false,
          is_clarification_needed: false,
          is_ingredient_query: true,
          skin_concern: JSON.stringify(['dry skin']),
          is_price_range_query: false,
          response_confidence: 0.85,
          suggested_follow_ups: JSON.stringify(['Looking for organic ingredients?', 'Want travel size?']),
          is_out_of_stock_query: false,
          query_language: 'en',
          is_comparison_query: false,
          cache_ttl_override: 3600,
          is_location_specific: false,
          user_intent_priority: 'product_search',
          alternative_product_types: JSON.stringify(['moisturizer', 'cream']),
          is_feedback_request: false,
          contextual_clarification: '',
          is_subscription_query: false,
          is_personalized_query: false,
          product_application_time: JSON.stringify(['morning', 'night']),
          is_promotion_query: false,
          user_sentiment: 'neutral',
          is_gift_query: JSON.stringify(false),
          product_packaging: JSON.stringify([]),
          is_educational_query: false,
          related_categories: JSON.stringify(['cleanser', 'moisturizer']),
          is_urgency_indicated: false,
          query_complexity: 4,
        },
      },
      {
        id: 'gift_set',
        data: 'gift sets for sensitive skin',
        metadata: {
          intent: 'product_search',
          is_product_query: true,
          search_keywords: JSON.stringify(['gift', 'sensitive skin', 'set']),
          product_types: JSON.stringify(['gift set', 'skincare set']),
          attributes: JSON.stringify(['sensitive skin', 'fragrance-free']),
          vendor: null,
          price_filter_max_price: null,
          price_filter_currency: null,
          requested_product_count: 3,
          ai_understanding: 'user is looking for gift sets for sensitive skin',
          advice: 'Here are some gentle skincare gift sets for sensitive skin:',
          sort_by_price: false,
          usage_instructions: 'Follow included instructions',
          is_combo_set_query: true,
          is_fictional_product_query: false,
          is_clarification_needed: false,
          is_ingredient_query: false,
          skin_concern: JSON.stringify(['sensitive skin']),
          is_price_range_query: false,
          response_confidence: 0.8,
          suggested_follow_ups: JSON.stringify(['Need luxury brands?', 'Prefer natural ingredients?']),
          is_out_of_stock_query: false,
          query_language: 'en',
          is_comparison_query: false,
          cache_ttl_override: 3600,
          is_location_specific: false,
          user_intent_priority: 'product_search',
          alternative_product_types: JSON.stringify(['moisturizer', 'toner']),
          is_feedback_request: false,
          contextual_clarification: '',
          is_subscription_query: false,
          is_personalized_query: false,
          product_application_time: JSON.stringify(['anytime']),
          is_promotion_query: false,
          user_sentiment: 'neutral',
          is_gift_query: JSON.stringify(['gift']),
          product_packaging: JSON.stringify([]),
          is_educational_query: false,
          related_categories: JSON.stringify(['cleanser', 'serum']),
          is_urgency_indicated: false,
          query_complexity: 4,
        },
      },
      {
        id: 'under_10_dollars',
        data: 'best moisturizer under $10',
        metadata: {
          intent: 'product_search',
          is_product_query: true,
          search_keywords: JSON.stringify(['moisturizer', 'cheap', 'under $10']),
          product_types: JSON.stringify(['moisturizer']),
          attributes: JSON.stringify(['affordable', 'drugstore']),
          vendor: null,
          price_filter_max_price: 10,
          price_filter_currency: 'USD',
          requested_product_count: 1,
          ai_understanding: 'product query for affordable moisturizers',
          advice: 'Check out these budget-friendly moisturizers for great value.',
          sort_by_price: true,
          usage_instructions: 'Apply twice daily.',
          is_combo_set_query: false,
          is_fictional_product_query: false,
          is_clarification_needed: false,
          is_ingredient_query: false,
          skin_concern: JSON.stringify(['dry skin']),
          is_price_range_query: false,
          response_confidence: 0.9,
          suggested_follow_ups: JSON.stringify(['Prefer oil-free?', 'Want a brand recommendation?']),
          is_out_of_stock_query: false,
          query_language: 'en',
          is_comparison_query: false,
          cache_ttl_override: 3600,
          is_location_specific: false,
          user_intent_priority: 'product_search',
          alternative_product_types: JSON.stringify(['serum', 'cleanser']),
          is_feedback_request: false,
          contextual_clarification: '',
          is_subscription_query: false,
          is_personalized_query: false,
          product_application_time: JSON.stringify(['morning', 'night']),
          is_promotion_query: false,
          user_sentiment: 'neutral',
          is_gift_query: JSON.stringify(false),
          product_packaging: JSON.stringify([]),
          is_educational_query: false,
          related_categories: JSON.stringify(['sunscreen', 'eye cream']),
          is_urgency_indicated: false,
          query_complexity: 3,
        },
      },
      {
        id: 'organic_sunscreen',
        data: 'organic sunscreen SPF 50',
        metadata: {
          intent: 'product_search',
          is_product_query: true,
          search_keywords: JSON.stringify(['sunscreen', 'SPF 50', 'organic']),
          product_types: JSON.stringify(['sunscreen']),
          attributes: JSON.stringify(['SPF 50', 'organic', 'reef-safe']),
          vendor: null,
          price_filter_max_price: null,
          price_filter_currency: null,
          requested_product_count: 1,
          ai_understanding: 'product query for organic SPF 50 sunscreen',
          advice: 'Here are top-rated organic sunscreens with SPF 50+ protection.',
          sort_by_price: false,
          usage_instructions: 'Apply 15 minutes before sun exposure.',
          is_combo_set_query: false,
          is_fictional_product_query: false,
          is_clarification_needed: false,
          is_ingredient_query: true,
          skin_concern: JSON.stringify([]),
          is_price_range_query: false,
          response_confidence: 0.95,
          suggested_follow_ups: JSON.stringify(['Want water-resistant?', 'Prefer mineral formula?']),
          is_out_of_stock_query: false,
          query_language: 'en',
          is_comparison_query: false,
          cache_ttl_override: 3600,
          is_location_specific: false,
          user_intent_priority: 'product_search',
          alternative_product_types: JSON.stringify([]),
          is_feedback_request: false,
          contextual_clarification: '',
          is_subscription_query: false,
          is_personalized_query: false,
          product_application_time: JSON.stringify(['morning']),
          is_promotion_query: false,
          user_sentiment: 'neutral',
          is_gift_query: JSON.stringify(false),
          product_packaging: JSON.stringify([]),
          is_educational_query: false,
          related_categories: JSON.stringify(['after-sun', 'lip balm']),
          is_urgency_indicated: false,
          query_complexity: 3,
        },
      },
      {
        id: 'vegan_mascara',
        data: 'vegan and cruelty-free mascara',
        metadata: {
          intent: 'product_search',
          is_product_query: true,
          search_keywords: JSON.stringify(['mascara', 'vegan', 'cruelty-free']),
          product_types: JSON.stringify(['mascara']),
          attributes: JSON.stringify(['vegan', 'cruelty-free']),
          vendor: null,
          price_filter_max_price: null,
          price_filter_currency: null,
          requested_product_count: 1,
          ai_understanding: 'product query for vegan and cruelty-free mascaras',
          advice: 'Sephora offers vegan and cruelty-free mascaras like Rare Beauty Perfect Strokes and Tarte Lights, Camera, Lashes.',
          sort_by_price: false,
          usage_instructions: 'Apply to lashes from root to tip.',
          is_combo_set_query: false,
          is_fictional_product_query: false,
          is_clarification_needed: false,
          is_ingredient_query: false,
          skin_concern: JSON.stringify([]),
          is_price_range_query: false,
          response_confidence: 0.9,
          suggested_follow_ups: JSON.stringify(['Want volumizing or lengthening?', 'Any brand preferences?']),
          is_out_of_stock_query: false,
          query_language: 'en',
          is_comparison_query: false,
          cache_ttl_override: 3600,
          is_location_specific: false,
          user_intent_priority: 'product_search',
          alternative_product_types: JSON.stringify(['eyeliner', 'eyeshadow']),
          is_feedback_request: false,
          contextual_clarification: '',
          is_subscription_query: false,
          is_personalized_query: false,
          product_application_time: JSON.stringify(['anytime']),
          is_promotion_query: false,
          user_sentiment: 'neutral',
          is_gift_query: JSON.stringify(false),
          product_packaging: JSON.stringify([]),
          is_educational_query: false,
          related_categories: JSON.stringify(['eyeliner', 'eyebrow products']),
          is_urgency_indicated: false,
          query_complexity: 3,
        },
      },
    ];

    // Load Gemini-generated data if available
    if (configData.true_gemini) {
      try {
        const geminiData = JSON.parse(await readFile(path.join(__dirname, 'mascara_data.json'), 'utf-8'));
        const geminiVectors = geminiData.map(item => ({
          id: item.query,
          data: item.response,
          metadata: {
            intent: 'product_search',
            is_product_query: true,
            search_keywords: JSON.stringify(['mascara', 'vegan', 'cruelty-free']),
            product_types: JSON.stringify(['mascara']),
            attributes: JSON.stringify(['vegan', 'cruelty-free']),
            vendor: null,
            price_filter_max_price: null,
            price_filter_currency: null,
            requested_product_count: 1,
            ai_understanding: 'Gemini-generated response for vegan mascara query',
            advice: item.response,
            sort_by_price: false,
            usage_instructions: 'Apply to lashes.',
            is_combo_set_query: false,
            is_fictional_product_query: false,
            is_clarification_needed: false,
            is_ingredient_query: false,
            skin_concern: JSON.stringify([]),
            is_price_range_query: false,
            response_confidence: 0.85,
            suggested_follow_ups: JSON.stringify(['Want specific brands?', 'Need reviews?']),
            is_out_of_stock_query: false,
            query_language: 'en',
            is_comparison_query: false,
            cache_ttl_override: 3600,
            is_location_specific: false,
            user_intent_priority: 'product_search',
            alternative_product_types: JSON.stringify(['eyeliner']),
            is_feedback_request: false,
            contextual_clarification: '',
            is_subscription_query: false,
            is_personalized_query: false,
            product_application_time: JSON.stringify(['anytime']),
            is_promotion_query: false,
            user_sentiment: 'neutral',
            is_gift_query: JSON.stringify(false),
            product_packaging: JSON.stringify([]),
            is_educational_query: false,
            related_categories: JSON.stringify(['eyeliner', 'eyeshadow']),
            is_urgency_indicated: false,
            query_complexity: 3,
            source: 'gemini',
          },
        }));
        productsToSeed = [...productsToSeed, ...geminiVectors];
      } catch (error) {
        console.warn('No Gemini data found or error loading mascara_data.json:', error.message);
      }
    }

    // Upsert all text data into Upstash Vector
    await vectorIndex.upsert(productsToSeed);
    console.log(`✅ Seeded ${productsToSeed.length} queries into Upstash Vector`);
  } catch (error) {
    console.error('❌ Failed to seed vector index:', error);
  }
}

seed().catch(console.error);